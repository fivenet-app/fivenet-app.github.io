import{_ as p,d as K,F as Ne,l as z,s as He,g as Ve,b as De,c as ze,q as qe,r as je,e as F,t as Ye,j as Fe,u as Ke,G as Ue}from"./BYM6geNt.js";import"./OezKFjqo.js";import"./Cpj98o6Y.js";var de=function(){var r=p(function(N,g,d,x){for(d=d||{},x=N.length;x--;d[N[x]]=g);return d},"o"),c=[1,3],o=[1,6],h=[1,4],i=[1,5],a=[2,5],b=[1,12],f=[5,7,13,19,21,23,24,26,28,31,36,39,48],m=[7,13,19,21,23,24,26,28,31,36,39],u=[7,12,13,19,21,23,24,26,28,31,36,39],s=[7,13,48],M=[1,42],v=[1,41],l=[1,49],_=[7,13,29,32,37,45,48],k=[1,57],y=[1,59],T=[1,60],L=[1,61],C=[7,13,32,41,45,48],R=[7,13,32,34,37,41,45,48],j={trace:p(function(){},"trace"),yy:{},symbols_:{error:2,start:3,eol:4,GG:5,document:6,EOF:7,":":8,DIR:9,options:10,body:11,OPT:12,NL:13,line:14,statement:15,commitStatement:16,mergeStatement:17,cherryPickStatement:18,acc_title:19,acc_title_value:20,acc_descr:21,acc_descr_value:22,acc_descr_multiline_value:23,section:24,branchStatement:25,CHECKOUT:26,ref:27,BRANCH:28,ORDER:29,NUM:30,CHERRY_PICK:31,COMMIT_ID:32,STR:33,PARENT_COMMIT:34,commitTags:35,MERGE:36,COMMIT_TYPE:37,commitType:38,COMMIT:39,commit_arg:40,COMMIT_MSG:41,NORMAL:42,REVERSE:43,HIGHLIGHT:44,COMMIT_TAG:45,EMPTYSTR:46,ID:47,";":48,$accept:0,$end:1},terminals_:{2:"error",5:"GG",7:"EOF",8:":",9:"DIR",12:"OPT",13:"NL",19:"acc_title",20:"acc_title_value",21:"acc_descr",22:"acc_descr_value",23:"acc_descr_multiline_value",24:"section",26:"CHECKOUT",28:"BRANCH",29:"ORDER",30:"NUM",31:"CHERRY_PICK",32:"COMMIT_ID",33:"STR",34:"PARENT_COMMIT",36:"MERGE",37:"COMMIT_TYPE",39:"COMMIT",41:"COMMIT_MSG",42:"NORMAL",43:"REVERSE",44:"HIGHLIGHT",45:"COMMIT_TAG",46:"EMPTYSTR",47:"ID",48:";"},productions_:[0,[3,2],[3,3],[3,4],[3,5],[6,0],[6,2],[10,2],[10,1],[11,0],[11,2],[14,2],[14,1],[15,1],[15,1],[15,1],[15,2],[15,2],[15,1],[15,1],[15,1],[15,2],[25,2],[25,4],[18,3],[18,5],[18,4],[18,6],[18,6],[18,4],[18,6],[17,2],[17,4],[17,4],[17,3],[17,5],[17,5],[17,5],[17,6],[17,5],[17,6],[17,7],[17,7],[17,7],[17,7],[17,7],[17,7],[16,2],[16,2],[16,3],[16,4],[16,4],[16,3],[16,4],[16,4],[16,5],[16,5],[16,6],[16,6],[16,6],[16,6],[16,6],[16,6],[16,3],[16,4],[16,4],[16,5],[16,5],[16,5],[16,5],[16,6],[16,6],[16,6],[16,6],[16,6],[16,6],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,6],[16,6],[16,6],[16,6],[16,6],[16,6],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[16,8],[40,0],[40,1],[38,1],[38,1],[38,1],[35,2],[35,2],[35,3],[35,3],[27,1],[27,1],[4,1],[4,1],[4,1]],performAction:p(function(g,d,x,n,w,e,re){var t=e.length-1;switch(w){case 2:return e[t];case 3:return e[t-1];case 4:return n.setDirection(e[t-3]),e[t-1];case 6:n.setOptions(e[t-1]),this.$=e[t];break;case 7:e[t-1]+=e[t],this.$=e[t-1];break;case 9:this.$=[];break;case 10:e[t-1].push(e[t]),this.$=e[t-1];break;case 11:this.$=e[t-1];break;case 16:this.$=e[t].trim(),n.setAccTitle(this.$);break;case 17:case 18:this.$=e[t].trim(),n.setAccDescription(this.$);break;case 19:n.addSection(e[t].substr(8)),this.$=e[t].substr(8);break;case 21:n.checkout(e[t]);break;case 22:n.branch(e[t]);break;case 23:n.branch(e[t-2],e[t]);break;case 24:n.cherryPick(e[t],"",void 0);break;case 25:n.cherryPick(e[t-2],"",void 0,e[t]);break;case 26:n.cherryPick(e[t-1],"",e[t]);break;case 27:n.cherryPick(e[t-3],"",e[t],e[t-1]);break;case 28:n.cherryPick(e[t-3],"",e[t-2],e[t]);break;case 29:n.cherryPick(e[t],"",e[t-2]);break;case 30:n.cherryPick(e[t-2],"",e[t-4],e[t]);break;case 31:n.merge(e[t],"","",void 0);break;case 32:n.merge(e[t-2],e[t],"",void 0);break;case 33:n.merge(e[t-2],"",e[t],void 0);break;case 34:n.merge(e[t-1],"","",e[t]);break;case 35:n.merge(e[t-3],e[t],"",e[t-2]);break;case 36:n.merge(e[t-3],"",e[t],e[t-2]);break;case 37:n.merge(e[t-3],"",e[t-1],e[t]);break;case 38:n.merge(e[t-4],e[t-2],e[t],void 0);break;case 39:n.merge(e[t-3],e[t-1],"",e[t]);break;case 40:n.merge(e[t-4],e[t],e[t-2],void 0);break;case 41:n.merge(e[t-5],e[t-3],e[t-1],e[t]);break;case 42:n.merge(e[t-5],e[t],e[t-3],e[t-2]);break;case 43:n.merge(e[t-5],e[t-3],e[t],e[t-2]);break;case 44:n.merge(e[t-5],e[t-1],e[t-3],e[t]);break;case 45:n.merge(e[t-5],e[t],e[t-2],e[t-4]);break;case 46:n.merge(e[t-5],e[t-2],e[t],e[t-4]);break;case 47:n.commit(e[t]);break;case 48:n.commit("","",n.commitType.NORMAL,e[t]);break;case 49:n.commit("","",e[t],void 0);break;case 50:n.commit("","",e[t],e[t-2]);break;case 51:n.commit("","",e[t-1],e[t]);break;case 52:n.commit("",e[t],n.commitType.NORMAL,void 0);break;case 53:n.commit("",e[t-1],n.commitType.NORMAL,e[t]);break;case 54:n.commit("",e[t],n.commitType.NORMAL,e[t-2]);break;case 55:n.commit("",e[t-2],e[t],void 0);break;case 56:n.commit("",e[t],e[t-2],void 0);break;case 57:n.commit("",e[t-3],e[t-1],e[t]);break;case 58:n.commit("",e[t-3],e[t],e[t-2]);break;case 59:n.commit("",e[t-1],e[t-3],e[t]);break;case 60:n.commit("",e[t],e[t-3],e[t-2]);break;case 61:n.commit("",e[t],e[t-2],e[t-4]);break;case 62:n.commit("",e[t-2],e[t],e[t-4]);break;case 63:n.commit(e[t],"",n.commitType.NORMAL,void 0);break;case 64:n.commit(e[t],"",n.commitType.NORMAL,e[t-2]);break;case 65:n.commit(e[t-1],"",n.commitType.NORMAL,e[t]);break;case 66:n.commit(e[t-2],"",e[t],void 0);break;case 67:n.commit(e[t],"",e[t-2],void 0);break;case 68:n.commit(e[t],e[t-2],n.commitType.NORMAL,void 0);break;case 69:n.commit(e[t-2],e[t],n.commitType.NORMAL,void 0);break;case 70:n.commit(e[t-3],"",e[t-1],e[t]);break;case 71:n.commit(e[t-3],"",e[t],e[t-2]);break;case 72:n.commit(e[t-1],"",e[t-3],e[t]);break;case 73:n.commit(e[t],"",e[t-3],e[t-2]);break;case 74:n.commit(e[t],"",e[t-2],e[t-4]);break;case 75:n.commit(e[t-2],"",e[t],e[t-4]);break;case 76:n.commit(e[t-4],e[t],e[t-2],void 0);break;case 77:n.commit(e[t-4],e[t-2],e[t],void 0);break;case 78:n.commit(e[t-2],e[t],e[t-4],void 0);break;case 79:n.commit(e[t],e[t-2],e[t-4],void 0);break;case 80:n.commit(e[t],e[t-4],e[t-2],void 0);break;case 81:n.commit(e[t-2],e[t-4],e[t],void 0);break;case 82:n.commit(e[t-3],e[t],n.commitType.NORMAL,e[t-2]);break;case 83:n.commit(e[t-3],e[t-1],n.commitType.NORMAL,e[t]);break;case 84:n.commit(e[t-2],e[t],n.commitType.NORMAL,e[t-4]);break;case 85:n.commit(e[t],e[t-2],n.commitType.NORMAL,e[t-4]);break;case 86:n.commit(e[t],e[t-3],n.commitType.NORMAL,e[t-2]);break;case 87:n.commit(e[t-1],e[t-3],n.commitType.NORMAL,e[t]);break;case 88:n.commit(e[t-5],e[t-3],e[t-1],e[t]);break;case 89:n.commit(e[t-5],e[t-3],e[t],e[t-2]);break;case 90:n.commit(e[t-5],e[t-1],e[t-3],e[t]);break;case 91:n.commit(e[t-5],e[t],e[t-3],e[t-2]);break;case 92:n.commit(e[t-5],e[t-2],e[t],e[t-4]);break;case 93:n.commit(e[t-5],e[t],e[t-2],e[t-4]);break;case 94:n.commit(e[t-3],e[t-5],e[t-1],e[t]);break;case 95:n.commit(e[t-3],e[t-5],e[t],e[t-2]);break;case 96:n.commit(e[t-1],e[t-5],e[t-3],e[t]);break;case 97:n.commit(e[t],e[t-5],e[t-3],e[t-2]);break;case 98:n.commit(e[t-2],e[t-5],e[t],e[t-4]);break;case 99:n.commit(e[t],e[t-5],e[t-2],e[t-4]);break;case 100:n.commit(e[t],e[t-4],e[t-2],e[t-6]);break;case 101:n.commit(e[t-2],e[t-4],e[t],e[t-6]);break;case 102:n.commit(e[t],e[t-2],e[t-4],e[t-6]);break;case 103:n.commit(e[t-2],e[t],e[t-4],e[t-6]);break;case 104:n.commit(e[t-4],e[t-2],e[t],e[t-6]);break;case 105:n.commit(e[t-4],e[t],e[t-2],e[t-6]);break;case 106:n.commit(e[t-1],e[t-3],e[t-5],e[t]);break;case 107:n.commit(e[t],e[t-3],e[t-5],e[t-2]);break;case 108:n.commit(e[t-2],e[t],e[t-5],e[t-4]);break;case 109:n.commit(e[t],e[t-2],e[t-5],e[t-4]);break;case 110:n.commit(e[t-3],e[t-1],e[t-5],e[t]);break;case 111:n.commit(e[t-3],e[t],e[t-5],e[t-2]);break;case 112:this.$="";break;case 113:this.$=e[t];break;case 114:this.$=n.commitType.NORMAL;break;case 115:this.$=n.commitType.REVERSE;break;case 116:this.$=n.commitType.HIGHLIGHT;break;case 117:this.$=[e[t]];break;case 118:this.$=[""];break;case 119:e[t-2].push(e[t]),this.$=e[t-2];break;case 120:e[t-2].push(""),this.$=e[t-2];break}},"anonymous"),table:[{3:1,4:2,5:c,7:o,13:h,48:i},{1:[3]},{3:7,4:2,5:c,7:o,13:h,48:i},{6:8,7:a,8:[1,9],9:[1,10],10:11,13:b},r(f,[2,123]),r(f,[2,124]),r(f,[2,125]),{1:[2,1]},{7:[1,13]},{6:14,7:a,10:11,13:b},{8:[1,15]},r(m,[2,9],{11:16,12:[1,17]}),r(u,[2,8]),{1:[2,2]},{7:[1,18]},{6:19,7:a,10:11,13:b},{7:[2,6],13:[1,22],14:20,15:21,16:23,17:24,18:25,19:[1,26],21:[1,27],23:[1,28],24:[1,29],25:30,26:[1,31],28:[1,35],31:[1,34],36:[1,33],39:[1,32]},r(u,[2,7]),{1:[2,3]},{7:[1,36]},r(m,[2,10]),{4:37,7:o,13:h,48:i},r(m,[2,12]),r(s,[2,13]),r(s,[2,14]),r(s,[2,15]),{20:[1,38]},{22:[1,39]},r(s,[2,18]),r(s,[2,19]),r(s,[2,20]),{27:40,33:M,47:v},r(s,[2,112],{40:43,35:44,32:[1,46],33:[1,48],37:[1,45],41:[1,47],45:l}),{27:50,33:M,47:v},{32:[1,51],35:52,45:l},{27:53,33:M,47:v},{1:[2,4]},r(m,[2,11]),r(s,[2,16]),r(s,[2,17]),r(s,[2,21]),r(_,[2,121]),r(_,[2,122]),r(s,[2,47]),r(s,[2,48],{32:[1,55],37:[1,54],41:[1,56],45:k}),{38:58,42:y,43:T,44:L},{33:[1,62]},{33:[1,63]},r(s,[2,113]),{33:[1,64],46:[1,65]},r(s,[2,31],{35:68,32:[1,66],37:[1,67],45:l}),{33:[1,69]},{32:[1,70],45:k},r(s,[2,22],{29:[1,71]}),{38:72,42:y,43:T,44:L},{33:[1,73]},{33:[1,74]},{33:[1,75],46:[1,76]},r(s,[2,49],{35:77,32:[1,78],41:[1,79],45:l}),r(C,[2,114]),r(C,[2,115]),r(C,[2,116]),r(s,[2,52],{35:80,37:[1,81],41:[1,82],45:l}),r(s,[2,63],{35:83,32:[1,85],37:[1,84],45:l}),r(R,[2,117]),r(R,[2,118]),{33:[1,86]},{38:87,42:y,43:T,44:L},r(s,[2,34],{32:[1,88],37:[1,89],45:k}),r(s,[2,24],{35:91,34:[1,90],45:l}),{33:[1,92]},{30:[1,93]},r(s,[2,50],{32:[1,94],41:[1,95]}),r(s,[2,54],{37:[1,96],41:[1,97]}),r(s,[2,64],{32:[1,99],37:[1,98]}),r(R,[2,119]),r(R,[2,120]),r(s,[2,51],{32:[1,100],41:[1,101],45:k}),{33:[1,102]},{33:[1,103]},r(s,[2,53],{37:[1,104],41:[1,105],45:k}),{38:106,42:y,43:T,44:L},{33:[1,107]},r(s,[2,65],{32:[1,109],37:[1,108],45:k}),{38:110,42:y,43:T,44:L},{33:[1,111]},r(s,[2,32],{35:113,37:[1,112],45:l}),r(s,[2,33],{35:114,32:[1,115],45:l}),{33:[1,116]},{38:117,42:y,43:T,44:L},{33:[1,118]},r(s,[2,26],{34:[1,119],45:k}),r(s,[2,29],{34:[1,120]}),r(s,[2,23]),{33:[1,121]},{33:[1,122]},{38:123,42:y,43:T,44:L},{33:[1,124]},{38:125,42:y,43:T,44:L},{33:[1,126]},{33:[1,127]},{33:[1,128]},r(s,[2,56],{35:129,41:[1,130],45:l}),r(s,[2,67],{35:131,32:[1,132],45:l}),{38:133,42:y,43:T,44:L},{33:[1,134]},r(s,[2,55],{35:135,41:[1,136],45:l}),r(s,[2,68],{35:138,37:[1,137],45:l}),{38:139,42:y,43:T,44:L},{33:[1,140]},r(s,[2,66],{35:141,32:[1,142],45:l}),r(s,[2,69],{35:144,37:[1,143],45:l}),{38:145,42:y,43:T,44:L},r(s,[2,39],{37:[1,146],45:k}),r(s,[2,37],{32:[1,147],45:k}),{33:[1,148]},r(s,[2,35],{37:[1,149]}),r(s,[2,36],{32:[1,150]}),r(s,[2,25],{35:151,45:l}),{33:[1,152]},{33:[1,153]},r(s,[2,61],{41:[1,154]}),r(s,[2,74],{32:[1,155]}),r(s,[2,62],{41:[1,156]}),r(s,[2,85],{37:[1,157]}),r(s,[2,75],{32:[1,158]}),r(s,[2,84],{37:[1,159]}),r(s,[2,60],{41:[1,160]}),r(s,[2,73],{32:[1,161]}),r(s,[2,59],{41:[1,162],45:k}),{33:[1,163]},r(s,[2,72],{32:[1,164],45:k}),{33:[1,165]},r(s,[2,58],{41:[1,166]}),r(s,[2,86],{37:[1,167]}),r(s,[2,57],{41:[1,168],45:k}),{33:[1,169]},{38:170,42:y,43:T,44:L},r(s,[2,87],{37:[1,171],45:k}),r(s,[2,71],{32:[1,172]}),r(s,[2,82],{37:[1,173]}),r(s,[2,70],{32:[1,174],45:k}),{33:[1,175]},{38:176,42:y,43:T,44:L},r(s,[2,83],{37:[1,177],45:k}),r(s,[2,38],{35:178,45:l}),{38:179,42:y,43:T,44:L},{33:[1,180]},r(s,[2,40],{35:181,45:l}),{38:182,42:y,43:T,44:L},{33:[1,183]},r(s,[2,27],{45:k}),r(s,[2,28]),r(s,[2,30]),{33:[1,184]},{33:[1,185]},{33:[1,186]},{38:187,42:y,43:T,44:L},{33:[1,188]},{38:189,42:y,43:T,44:L},{33:[1,190]},{33:[1,191]},{33:[1,192]},r(s,[2,79],{35:193,45:l}),{33:[1,194]},r(s,[2,78],{35:195,45:l}),{33:[1,196]},{38:197,42:y,43:T,44:L},{33:[1,198]},r(s,[2,80],{35:199,45:l}),r(s,[2,81],{35:200,45:l}),{38:201,42:y,43:T,44:L},{33:[1,202]},{38:203,42:y,43:T,44:L},{33:[1,204]},r(s,[2,76],{35:205,45:l}),r(s,[2,77],{35:206,45:l}),{38:207,42:y,43:T,44:L},r(s,[2,41],{45:k}),r(s,[2,43]),r(s,[2,42]),r(s,[2,44],{45:k}),r(s,[2,46]),r(s,[2,45]),r(s,[2,102]),r(s,[2,103]),r(s,[2,100]),r(s,[2,101]),r(s,[2,105]),r(s,[2,104]),r(s,[2,109]),r(s,[2,108]),r(s,[2,107]),r(s,[2,106],{45:k}),r(s,[2,111]),r(s,[2,110],{45:k}),r(s,[2,99]),r(s,[2,98]),r(s,[2,97]),r(s,[2,96],{45:k}),r(s,[2,94],{45:k}),r(s,[2,95]),r(s,[2,93]),r(s,[2,92]),r(s,[2,91]),r(s,[2,90],{45:k}),r(s,[2,88],{45:k}),r(s,[2,89])],defaultActions:{7:[2,1],13:[2,2],18:[2,3],36:[2,4]},parseError:p(function(g,d){if(d.recoverable)this.trace(g);else{var x=new Error(g);throw x.hash=d,x}},"parseError"),parse:p(function(g){var d=this,x=[0],n=[],w=[null],e=[],re=this.table,t="",ne=0,ke=0,Ie=2,_e=1,Se=e.slice.call(arguments,1),A=Object.create(this.lexer),Q={yy:{}};for(var fe in this.yy)Object.prototype.hasOwnProperty.call(this.yy,fe)&&(Q.yy[fe]=this.yy[fe]);A.setInput(g,Q.yy),Q.yy.lexer=A,Q.yy.parser=this,typeof A.yylloc>"u"&&(A.yylloc={});var pe=A.yylloc;e.push(pe);var Ge=A.options&&A.options.ranges;typeof Q.yy.parseError=="function"?this.parseError=Q.yy.parseError:this.parseError=Object.getPrototypeOf(this).parseError;function Be(q){x.length=x.length-2*q,w.length=w.length-q,e.length=e.length-q}p(Be,"popStack");function ve(){var q;return q=n.pop()||A.lex()||_e,typeof q!="number"&&(q instanceof Array&&(n=q,q=n.pop()),q=d.symbols_[q]||q),q}p(ve,"lex");for(var D,X,Y,ge,ee={},ce,W,Te,oe;;){if(X=x[x.length-1],this.defaultActions[X]?Y=this.defaultActions[X]:((D===null||typeof D>"u")&&(D=ve()),Y=re[X]&&re[X][D]),typeof Y>"u"||!Y.length||!Y[0]){var be="";oe=[];for(ce in re[X])this.terminals_[ce]&&ce>Ie&&oe.push("'"+this.terminals_[ce]+"'");A.showPosition?be="Parse error on line "+(ne+1)+`:
`+A.showPosition()+`
Expecting `+oe.join(", ")+", got '"+(this.terminals_[D]||D)+"'":be="Parse error on line "+(ne+1)+": Unexpected "+(D==_e?"end of input":"'"+(this.terminals_[D]||D)+"'"),this.parseError(be,{text:A.match,token:this.terminals_[D]||D,line:A.yylineno,loc:pe,expected:oe})}if(Y[0]instanceof Array&&Y.length>1)throw new Error("Parse Error: multiple actions possible at state: "+X+", token: "+D);switch(Y[0]){case 1:x.push(D),w.push(A.yytext),e.push(A.yylloc),x.push(Y[1]),D=null,ke=A.yyleng,t=A.yytext,ne=A.yylineno,pe=A.yylloc;break;case 2:if(W=this.productions_[Y[1]][1],ee.$=w[w.length-W],ee._$={first_line:e[e.length-(W||1)].first_line,last_line:e[e.length-1].last_line,first_column:e[e.length-(W||1)].first_column,last_column:e[e.length-1].last_column},Ge&&(ee._$.range=[e[e.length-(W||1)].range[0],e[e.length-1].range[1]]),ge=this.performAction.apply(ee,[t,ke,ne,Q.yy,Y[1],w,e].concat(Se)),typeof ge<"u")return ge;W&&(x=x.slice(0,-1*W*2),w=w.slice(0,-1*W),e=e.slice(0,-1*W)),x.push(this.productions_[Y[1]][0]),w.push(ee.$),e.push(ee._$),Te=re[x[x.length-2]][x[x.length-1]],x.push(Te);break;case 3:return!0}}return!0},"parse")},V=function(){var N={EOF:1,parseError:p(function(d,x){if(this.yy.parser)this.yy.parser.parseError(d,x);else throw new Error(d)},"parseError"),setInput:p(function(g,d){return this.yy=d||this.yy||{},this._input=g,this._more=this._backtrack=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match="",this.conditionStack=["INITIAL"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this},"setInput"),input:p(function(){var g=this._input[0];this.yytext+=g,this.yyleng++,this.offset++,this.match+=g,this.matched+=g;var d=g.match(/(?:\r\n?|\n).*/g);return d?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),g},"input"),unput:p(function(g){var d=g.length,x=g.split(/(?:\r\n?|\n)/g);this._input=g+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-d),this.offset-=d;var n=this.match.split(/(?:\r\n?|\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),x.length-1&&(this.yylineno-=x.length-1);var w=this.yylloc.range;return this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:x?(x.length===n.length?this.yylloc.first_column:0)+n[n.length-x.length].length-x[0].length:this.yylloc.first_column-d},this.options.ranges&&(this.yylloc.range=[w[0],w[0]+this.yyleng-d]),this.yyleng=this.yytext.length,this},"unput"),more:p(function(){return this._more=!0,this},"more"),reject:p(function(){if(this.options.backtrack_lexer)this._backtrack=!0;else return this.parseError("Lexical error on line "+(this.yylineno+1)+`. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).
`+this.showPosition(),{text:"",token:null,line:this.yylineno});return this},"reject"),less:p(function(g){this.unput(this.match.slice(g))},"less"),pastInput:p(function(){var g=this.matched.substr(0,this.matched.length-this.match.length);return(g.length>20?"...":"")+g.substr(-20).replace(/\n/g,"")},"pastInput"),upcomingInput:p(function(){var g=this.match;return g.length<20&&(g+=this._input.substr(0,20-g.length)),(g.substr(0,20)+(g.length>20?"...":"")).replace(/\n/g,"")},"upcomingInput"),showPosition:p(function(){var g=this.pastInput(),d=new Array(g.length+1).join("-");return g+this.upcomingInput()+`
`+d+"^"},"showPosition"),test_match:p(function(g,d){var x,n,w;if(this.options.backtrack_lexer&&(w={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done},this.options.ranges&&(w.yylloc.range=this.yylloc.range.slice(0))),n=g[0].match(/(?:\r\n?|\n).*/g),n&&(this.yylineno+=n.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:n?n[n.length-1].length-n[n.length-1].match(/\r?\n?/)[0].length:this.yylloc.last_column+g[0].length},this.yytext+=g[0],this.match+=g[0],this.matches=g,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._backtrack=!1,this._input=this._input.slice(g[0].length),this.matched+=g[0],x=this.performAction.call(this,this.yy,this,d,this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),x)return x;if(this._backtrack){for(var e in w)this[e]=w[e];return!1}return!1},"test_match"),next:p(function(){if(this.done)return this.EOF;this._input||(this.done=!0);var g,d,x,n;this._more||(this.yytext="",this.match="");for(var w=this._currentRules(),e=0;e<w.length;e++)if(x=this._input.match(this.rules[w[e]]),x&&(!d||x[0].length>d[0].length)){if(d=x,n=e,this.options.backtrack_lexer){if(g=this.test_match(x,w[e]),g!==!1)return g;if(this._backtrack){d=!1;continue}else return!1}else if(!this.options.flex)break}return d?(g=this.test_match(d,w[n]),g!==!1?g:!1):this._input===""?this.EOF:this.parseError("Lexical error on line "+(this.yylineno+1)+`. Unrecognized text.
`+this.showPosition(),{text:"",token:null,line:this.yylineno})},"next"),lex:p(function(){var d=this.next();return d||this.lex()},"lex"),begin:p(function(d){this.conditionStack.push(d)},"begin"),popState:p(function(){var d=this.conditionStack.length-1;return d>0?this.conditionStack.pop():this.conditionStack[0]},"popState"),_currentRules:p(function(){return this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]?this.conditions[this.conditionStack[this.conditionStack.length-1]].rules:this.conditions.INITIAL.rules},"_currentRules"),topState:p(function(d){return d=this.conditionStack.length-1-Math.abs(d||0),d>=0?this.conditionStack[d]:"INITIAL"},"topState"),pushState:p(function(d){this.begin(d)},"pushState"),stateStackSize:p(function(){return this.conditionStack.length},"stateStackSize"),options:{"case-insensitive":!0},performAction:p(function(d,x,n,w){switch(n){case 0:return this.begin("acc_title"),19;case 1:return this.popState(),"acc_title_value";case 2:return this.begin("acc_descr"),21;case 3:return this.popState(),"acc_descr_value";case 4:this.begin("acc_descr_multiline");break;case 5:this.popState();break;case 6:return"acc_descr_multiline_value";case 7:return 13;case 8:break;case 9:break;case 10:return 5;case 11:return 39;case 12:return 32;case 13:return 37;case 14:return 41;case 15:return 42;case 16:return 43;case 17:return 44;case 18:return 45;case 19:return 28;case 20:return 29;case 21:return 36;case 22:return 31;case 23:return 34;case 24:return 26;case 25:return 9;case 26:return 9;case 27:return 9;case 28:return 8;case 29:return"CARET";case 30:this.begin("options");break;case 31:this.popState();break;case 32:return 12;case 33:return 46;case 34:this.begin("string");break;case 35:this.popState();break;case 36:return 33;case 37:return 30;case 38:return 47;case 39:return 7}},"anonymous"),rules:[/^(?:accTitle\s*:\s*)/i,/^(?:(?!\n||)*[^\n]*)/i,/^(?:accDescr\s*:\s*)/i,/^(?:(?!\n||)*[^\n]*)/i,/^(?:accDescr\s*\{\s*)/i,/^(?:[\}])/i,/^(?:[^\}]*)/i,/^(?:(\r?\n)+)/i,/^(?:#[^\n]*)/i,/^(?:%[^\n]*)/i,/^(?:gitGraph\b)/i,/^(?:commit(?=\s|$))/i,/^(?:id:)/i,/^(?:type:)/i,/^(?:msg:)/i,/^(?:NORMAL\b)/i,/^(?:REVERSE\b)/i,/^(?:HIGHLIGHT\b)/i,/^(?:tag:)/i,/^(?:branch(?=\s|$))/i,/^(?:order:)/i,/^(?:merge(?=\s|$))/i,/^(?:cherry-pick(?=\s|$))/i,/^(?:parent:)/i,/^(?:\b(checkout|switch)(?=\s|$))/i,/^(?:LR\b)/i,/^(?:TB\b)/i,/^(?:BT\b)/i,/^(?::)/i,/^(?:\^)/i,/^(?:options\r?\n)/i,/^(?:[ \r\n\t]+end\b)/i,/^(?:[\s\S]+(?=[ \r\n\t]+end))/i,/^(?:["]["])/i,/^(?:["])/i,/^(?:["])/i,/^(?:[^"]*)/i,/^(?:[0-9]+(?=\s|$))/i,/^(?:\w([-\./\w]*[-\w])?)/i,/^(?:$)/i,/^(?:\s+)/i],conditions:{acc_descr_multiline:{rules:[5,6],inclusive:!1},acc_descr:{rules:[3],inclusive:!1},acc_title:{rules:[1],inclusive:!1},options:{rules:[31,32],inclusive:!1},string:{rules:[35,36],inclusive:!1},INITIAL:{rules:[0,2,4,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,33,34,37,38,39,40],inclusive:!0}}};return N}();j.lexer=V;function U(){this.yy={}}return p(U,"Parser"),U.prototype=j,j.Parser=U,new U}();de.parser=de;var We=de,{mainBranchName:le,mainBranchOrder:Je}=K().gitGraph,G=new Map,H=null,se=new Map;se.set(le,{name:le,order:Je});var O=new Map;O.set(le,H);var S=le,we="LR",$=0;function ue(){return Ne({length:7})}p(ue,"getId");function Me(r,c){const o=Object.create(null);return r.reduce((h,i)=>{const a=c(i);return o[a]||(o[a]=!0,h.push(i)),h},[])}p(Me,"uniqBy");var Qe=p(function(r){we=r},"setDirection"),Le={},Xe=p(function(r){z.debug("options str",r),r=r==null?void 0:r.trim(),r=r||"{}";try{Le=JSON.parse(r)}catch(c){z.error("error while parsing gitGraph options",c.message)}},"setOptions"),Ze=p(function(){return Le},"getOptions"),$e=p(function(r,c,o,h){z.debug("Entering commit:",r,c,o,h);const i=K();c=F.sanitizeText(c,i),r=F.sanitizeText(r,i),h=h==null?void 0:h.map(b=>F.sanitizeText(b,i));const a={id:c||$+"-"+ue(),message:r,seq:$++,type:o||te.NORMAL,tags:h??[],parents:H==null?[]:[H.id],branch:S};H=a,G.set(a.id,a),O.set(S,a.id),z.debug("in pushCommit "+a.id)},"commit"),et=p(function(r,c){if(r=F.sanitizeText(r,K()),!O.has(r))O.set(r,H!=null?H.id:null),se.set(r,{name:r,order:c?parseInt(c,10):null}),Re(r),z.debug("in createBranch");else{let o=new Error('Trying to create an existing branch. (Help: Either use a new name if you want create a new branch or try using "checkout '+r+'")');throw o.hash={text:"branch "+r,token:"branch "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:['"checkout '+r+'"']},o}},"branch"),tt=p(function(r,c,o,h){const i=K();r=F.sanitizeText(r,i),c=F.sanitizeText(c,i);const a=G.get(O.get(S)),b=G.get(O.get(r));if(S===r){let m=new Error('Incorrect usage of "merge". Cannot merge a branch to itself');throw m.hash={text:"merge "+r,token:"merge "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["branch abc"]},m}else if(a===void 0||!a){let m=new Error('Incorrect usage of "merge". Current branch ('+S+")has no commits");throw m.hash={text:"merge "+r,token:"merge "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["commit"]},m}else if(O.has(r)){if(b===void 0||!b){let m=new Error('Incorrect usage of "merge". Branch to be merged ('+r+") has no commits");throw m.hash={text:"merge "+r,token:"merge "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:['"commit"']},m}else if(a===b){let m=new Error('Incorrect usage of "merge". Both branches have same head');throw m.hash={text:"merge "+r,token:"merge "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["branch abc"]},m}else if(c&&G.has(c)){let m=new Error('Incorrect usage of "merge". Commit with id:'+c+" already exists, use different custom Id");throw m.hash={text:"merge "+r+c+o+(h==null?void 0:h.join(",")),token:"merge "+r+c+o+(h==null?void 0:h.join(",")),line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:[`merge ${r} ${c}_UNIQUE ${o} ${h==null?void 0:h.join(",")}`]},m}}else{let m=new Error('Incorrect usage of "merge". Branch to be merged ('+r+") does not exist");throw m.hash={text:"merge "+r,token:"merge "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["branch "+r]},m}const f={id:c||$+"-"+ue(),message:"merged branch "+r+" into "+S,seq:$++,parents:[H==null?null:H.id,O.get(r)],branch:S,type:te.MERGE,customType:o,customId:!!c,tags:h||[]};H=f,G.set(f.id,f),O.set(S,f.id),z.debug(O),z.debug("in mergeBranch")},"merge"),rt=p(function(r,c,o,h){z.debug("Entering cherryPick:",r,c,o);const i=K();if(r=F.sanitizeText(r,i),c=F.sanitizeText(c,i),o=o==null?void 0:o.map(f=>F.sanitizeText(f,i)),h=F.sanitizeText(h,i),!r||!G.has(r)){let f=new Error('Incorrect usage of "cherryPick". Source commit id should exist and provided');throw f.hash={text:"cherryPick "+r+" "+c,token:"cherryPick "+r+" "+c,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},f}let a=G.get(r),b=a.branch;if(h&&!(Array.isArray(a.parents)&&a.parents.includes(h)))throw new Error("Invalid operation: The specified parent commit is not an immediate parent of the cherry-picked commit.");if(a.type===te.MERGE&&!h)throw new Error("Incorrect usage of cherry-pick: If the source commit is a merge commit, an immediate parent commit must be specified.");if(!c||!G.has(c)){if(b===S){let u=new Error('Incorrect usage of "cherryPick". Source commit is already on current branch');throw u.hash={text:"cherryPick "+r+" "+c,token:"cherryPick "+r+" "+c,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},u}const f=G.get(O.get(S));if(f===void 0||!f){let u=new Error('Incorrect usage of "cherry-pick". Current branch ('+S+")has no commits");throw u.hash={text:"cherryPick "+r+" "+c,token:"cherryPick "+r+" "+c,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},u}const m={id:$+"-"+ue(),message:"cherry-picked "+a+" into "+S,seq:$++,parents:[H==null?null:H.id,a.id],branch:S,type:te.CHERRY_PICK,tags:o?o.filter(Boolean):[`cherry-pick:${a.id}${a.type===te.MERGE?`|parent:${h}`:""}`]};H=m,G.set(m.id,m),O.set(S,m.id),z.debug(O),z.debug("in cherryPick")}},"cherryPick"),Re=p(function(r){if(r=F.sanitizeText(r,K()),O.has(r)){S=r;const c=O.get(S);H=G.get(c)}else{let c=new Error('Trying to checkout branch which is not yet created. (Help try using "branch '+r+'")');throw c.hash={text:"checkout "+r,token:"checkout "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:['"branch '+r+'"']},c}},"checkout");function xe(r,c,o){const h=r.indexOf(c);h===-1?r.push(o):r.splice(h,1,o)}p(xe,"upsert");function ye(r){const c=r.reduce((i,a)=>i.seq>a.seq?i:a,r[0]);let o="";r.forEach(function(i){i===c?o+="	*":o+="	|"});const h=[o,c.id,c.seq];for(let i in O)O.get(i)===c.id&&h.push(i);if(z.debug(h.join(" ")),c.parents&&c.parents.length==2){const i=G.get(c.parents[0]);xe(r,c,i),r.push(G.get(c.parents[1]))}else{if(c.parents.length==0)return;{const i=G.get(c.parents);xe(r,c,i)}}r=Me(r,i=>i.id),ye(r)}p(ye,"prettyPrintCommitHistory");var it=p(function(){z.debug(G);const r=Ce()[0];ye([r])},"prettyPrint"),at=p(function(){G=new Map,H=null;const{mainBranchName:r,mainBranchOrder:c}=K().gitGraph;O=new Map,O.set(r,null),se=new Map,se.set(r,{name:r,order:c}),S=r,$=0,Ye()},"clear"),st=p(function(){return[...se.values()].map((c,o)=>c.order!==null?c:{...c,order:parseFloat(`0.${o}`,10)}).sort((c,o)=>c.order-o.order).map(({name:c})=>({name:c}))},"getBranchesAsObjArray"),nt=p(function(){return O},"getBranches"),ct=p(function(){return G},"getCommits"),Ce=p(function(){const r=[...G.values()];return r.forEach(function(c){z.debug(c.id)}),r.sort((c,o)=>c.seq-o.seq),r},"getCommitsArray"),ot=p(function(){return S},"getCurrentBranch"),lt=p(function(){return we},"getDirection"),ht=p(function(){return H},"getHead"),te={NORMAL:0,REVERSE:1,HIGHLIGHT:2,MERGE:3,CHERRY_PICK:4},mt={getConfig:p(()=>K().gitGraph,"getConfig"),setDirection:Qe,setOptions:Xe,getOptions:Ze,commit:$e,branch:et,merge:tt,cherryPick:rt,checkout:Re,prettyPrint:it,clear:at,getBranchesAsObjArray:st,getBranches:nt,getCommits:ct,getCommitsArray:Ce,getCurrentBranch:ot,getDirection:lt,getHead:ht,setAccTitle:He,getAccTitle:Ve,getAccDescription:De,setAccDescription:ze,setDiagramTitle:qe,getDiagramTitle:je,commitType:te},ie=new Map,P={NORMAL:0,REVERSE:1,HIGHLIGHT:2,MERGE:3,CHERRY_PICK:4},Z=8,I={},B={},he=[],J=0,E="LR",me=30,ut=p(()=>{I=new Map,B=new Map,ie=new Map,J=0,he=[],E="LR"},"clear"),Pe=p(r=>{const c=document.createElementNS("http://www.w3.org/2000/svg","text");let o=[];typeof r=="string"?o=r.split(/\\n|\n|<br\s*\/?>/gi):Array.isArray(r)?o=r:o=[];for(const h of o){const i=document.createElementNS("http://www.w3.org/2000/svg","tspan");i.setAttributeNS("http://www.w3.org/XML/1998/namespace","xml:space","preserve"),i.setAttribute("dy","1em"),i.setAttribute("x","0"),i.setAttribute("class","row"),i.textContent=h.trim(),c.appendChild(i)}return c},"drawText"),Oe=p(r=>{let c="",o=0;return r.forEach(h=>{const i=E==="TB"||E==="BT"?B.get(h).y:B.get(h).x;i>=o&&(c=h,o=i)}),c||void 0},"findClosestParent"),Ae=p(r=>{let c="",o=1/0;return r.forEach(h=>{const i=B.get(h).y;i<=o&&(c=h,o=i)}),c||void 0},"findClosestParentBT"),ft=p((r,c,o,h,i)=>{let a=o,b=o,f=[];r.forEach(m=>{const u=c.get(m);if(u.parents.length){const v=Oe(u.parents);a=B.get(v).y+h,a>=b&&(b=a)}else f.push(u);const s=I.get(u.branch).pos,M=a+i;B.set(u.id,{x:s,y:M})}),a=b,f.forEach(m=>{const s=a+o,M=I.get(m.branch).pos;B.set(m.id,{x:M,y:s})}),r.forEach(m=>{const u=c.get(m);if(u.parents.length){const s=Ae(u.parents);a=B.get(s).y-h,a<=b&&(b=a);const M=I.get(u.branch).pos,v=a-i;B.set(u.id,{x:M,y:v})}})},"setParallelBTPos"),Ee=p((r,c,o)=>{const h=K().gitGraph,i=r.append("g").attr("class","commit-bullets"),a=r.append("g").attr("class","commit-labels");let b=0;(E==="TB"||E==="BT")&&(b=me);const f=[...c.keys()],m=h.parallelCommits,u=10,s=40;let M=E!=="BT"||E==="BT"&&m?f.sort((v,l)=>c.get(v).seq-c.get(l).seq):f.sort((v,l)=>c.get(v).seq-c.get(l).seq).reverse();E==="BT"&&m&&(ft(M,c,b,s,u),M=M.reverse()),M.forEach(v=>{const l=c.get(v);if(m)if(l.parents.length){const T=E==="BT"?Ae(l.parents):Oe(l.parents);E==="TB"?b=B.get(T).y+s:E==="BT"?b=B.get(v).y-s:b=B.get(T).x+s}else E==="TB"?b=me:E==="BT"?b=B.get(v).y-s:b=0;const _=E==="BT"&&m?b:b+u,k=E==="TB"||E==="BT"?_:I.get(l.branch).pos,y=E==="TB"||E==="BT"?I.get(l.branch).pos:_;if(o){let T,L=l.customType!==void 0&&l.customType!==""?l.customType:l.type;switch(L){case P.NORMAL:T="commit-normal";break;case P.REVERSE:T="commit-reverse";break;case P.HIGHLIGHT:T="commit-highlight";break;case P.MERGE:T="commit-merge";break;case P.CHERRY_PICK:T="commit-cherry-pick";break;default:T="commit-normal"}if(L===P.HIGHLIGHT){const C=i.append("rect");C.attr("x",y-10),C.attr("y",k-10),C.attr("height",20),C.attr("width",20),C.attr("class",`commit ${l.id} commit-highlight${I.get(l.branch).index%Z} ${T}-outer`),i.append("rect").attr("x",y-6).attr("y",k-6).attr("height",12).attr("width",12).attr("class",`commit ${l.id} commit${I.get(l.branch).index%Z} ${T}-inner`)}else if(L===P.CHERRY_PICK)i.append("circle").attr("cx",y).attr("cy",k).attr("r",10).attr("class",`commit ${l.id} ${T}`),i.append("circle").attr("cx",y-3).attr("cy",k+2).attr("r",2.75).attr("fill","#fff").attr("class",`commit ${l.id} ${T}`),i.append("circle").attr("cx",y+3).attr("cy",k+2).attr("r",2.75).attr("fill","#fff").attr("class",`commit ${l.id} ${T}`),i.append("line").attr("x1",y+3).attr("y1",k+1).attr("x2",y).attr("y2",k-5).attr("stroke","#fff").attr("class",`commit ${l.id} ${T}`),i.append("line").attr("x1",y-3).attr("y1",k+1).attr("x2",y).attr("y2",k-5).attr("stroke","#fff").attr("class",`commit ${l.id} ${T}`);else{const C=i.append("circle");if(C.attr("cx",y),C.attr("cy",k),C.attr("r",l.type===P.MERGE?9:10),C.attr("class",`commit ${l.id} commit${I.get(l.branch).index%Z}`),L===P.MERGE){const R=i.append("circle");R.attr("cx",y),R.attr("cy",k),R.attr("r",6),R.attr("class",`commit ${T} ${l.id} commit${I.get(l.branch).index%Z}`)}L===P.REVERSE&&i.append("path").attr("d",`M ${y-5},${k-5}L${y+5},${k+5}M${y-5},${k+5}L${y+5},${k-5}`).attr("class",`commit ${T} ${l.id} commit${I.get(l.branch).index%Z}`)}}if(E==="TB"||E==="BT"?B.set(l.id,{x:y,y:_}):B.set(l.id,{x:_,y:k}),o){if(l.type!==P.CHERRY_PICK&&(l.customId&&l.type===P.MERGE||l.type!==P.MERGE)&&h.showCommitLabel){const C=a.append("g"),R=C.insert("rect").attr("class","commit-label-bkg"),j=C.append("text").attr("x",b).attr("y",k+25).attr("class","commit-label").text(l.id);let V=j.node().getBBox();if(R.attr("x",_-V.width/2-2).attr("y",k+13.5).attr("width",V.width+2*2).attr("height",V.height+2*2),E==="TB"||E==="BT"?(R.attr("x",y-(V.width+4*4+5)).attr("y",k-12),j.attr("x",y-(V.width+4*4)).attr("y",k+V.height-12)):j.attr("x",_-V.width/2),h.rotateCommitLabel)if(E==="TB"||E==="BT")j.attr("transform","rotate(-45, "+y+", "+k+")"),R.attr("transform","rotate(-45, "+y+", "+k+")");else{let U=-7.5-(V.width+10)/25*9.5,N=10+V.width/25*8.5;C.attr("transform","translate("+U+", "+N+") rotate(-45, "+b+", "+k+")")}}if(l.tags.length>0){let C=0,R=0,j=0;const V=[];for(const U of l.tags.reverse()){const N=a.insert("polygon"),g=a.append("circle"),d=a.append("text").attr("y",k-16-C).attr("class","tag-label").text(U);let x=d.node().getBBox();R=Math.max(R,x.width),j=Math.max(j,x.height),d.attr("x",_-x.width/2),V.push({tag:d,hole:g,rect:N,yOffset:C}),C+=20}for(const{tag:U,hole:N,rect:g,yOffset:d}of V){const x=j/2,n=k-19.2-d;if(g.attr("class","tag-label-bkg").attr("points",`
            ${b-R/2-4/2},${n+2}
            ${b-R/2-4/2},${n-2}
            ${_-R/2-4},${n-x-2}
            ${_+R/2+4},${n-x-2}
            ${_+R/2+4},${n+x+2}
            ${_-R/2-4},${n+x+2}`),N.attr("cy",n).attr("cx",b-R/2+4/2).attr("r",1.5).attr("class","tag-hole"),E==="TB"||E==="BT"){const w=b+d;g.attr("class","tag-label-bkg").attr("points",`
              ${y},${w+2}
              ${y},${w-2}
              ${y+u},${w-x-2}
              ${y+u+R+4},${w-x-2}
              ${y+u+R+4},${w+x+2}
              ${y+u},${w+x+2}`).attr("transform","translate(12,12) rotate(45, "+y+","+b+")"),N.attr("cx",y+4/2).attr("cy",w).attr("transform","translate(12,12) rotate(45, "+y+","+b+")"),U.attr("x",y+5).attr("y",w+3).attr("transform","translate(14,14) rotate(45, "+y+","+b+")")}}}}b=E==="BT"&&m?b+s:b+s+u,b>J&&(J=b)})},"drawCommits"),pt=p((r,c,o,h,i)=>{const b=(E==="TB"||E==="BT"?o.x<h.x:o.y<h.y)?c.branch:r.branch,f=p(u=>u.branch===b,"isOnBranchToGetCurve"),m=p(u=>u.seq>r.seq&&u.seq<c.seq,"isBetweenCommits");return[...i.values()].some(u=>m(u)&&f(u))},"shouldRerouteArrow"),ae=p((r,c,o=0)=>{const h=r+Math.abs(r-c)/2;if(o>5)return h;if(he.every(b=>Math.abs(b-h)>=10))return he.push(h),h;const a=Math.abs(r-c);return ae(r,c-a/5,o+1)},"findLane"),gt=p((r,c,o,h)=>{const i=B.get(c.id),a=B.get(o.id),b=pt(c,o,i,a,h);let f="",m="",u=0,s=0,M=I.get(o.branch).index;o.type===P.MERGE&&c.id!==o.parents[0]&&(M=I.get(c.branch).index);let v;if(b){f="A 10 10, 0, 0, 0,",m="A 10 10, 0, 0, 1,",u=10,s=10;const l=i.y<a.y?ae(i.y,a.y):ae(a.y,i.y),_=i.x<a.x?ae(i.x,a.x):ae(a.x,i.x);E==="TB"?i.x<a.x?v=`M ${i.x} ${i.y} L ${_-u} ${i.y} ${m} ${_} ${i.y+s} L ${_} ${a.y-u} ${f} ${_+s} ${a.y} L ${a.x} ${a.y}`:(M=I.get(c.branch).index,v=`M ${i.x} ${i.y} L ${_+u} ${i.y} ${f} ${_} ${i.y+s} L ${_} ${a.y-u} ${m} ${_-s} ${a.y} L ${a.x} ${a.y}`):E==="BT"?i.x<a.x?v=`M ${i.x} ${i.y} L ${_-u} ${i.y} ${f} ${_} ${i.y-s} L ${_} ${a.y+u} ${m} ${_+s} ${a.y} L ${a.x} ${a.y}`:(M=I.get(c.branch).index,v=`M ${i.x} ${i.y} L ${_+u} ${i.y} ${m} ${_} ${i.y-s} L ${_} ${a.y+u} ${f} ${_-s} ${a.y} L ${a.x} ${a.y}`):i.y<a.y?v=`M ${i.x} ${i.y} L ${i.x} ${l-u} ${f} ${i.x+s} ${l} L ${a.x-u} ${l} ${m} ${a.x} ${l+s} L ${a.x} ${a.y}`:(M=I.get(c.branch).index,v=`M ${i.x} ${i.y} L ${i.x} ${l+u} ${m} ${i.x+s} ${l} L ${a.x-u} ${l} ${f} ${a.x} ${l-s} L ${a.x} ${a.y}`)}else f="A 20 20, 0, 0, 0,",m="A 20 20, 0, 0, 1,",u=20,s=20,E==="TB"?(i.x<a.x&&(o.type===P.MERGE&&c.id!==o.parents[0]?v=`M ${i.x} ${i.y} L ${i.x} ${a.y-u} ${f} ${i.x+s} ${a.y} L ${a.x} ${a.y}`:v=`M ${i.x} ${i.y} L ${a.x-u} ${i.y} ${m} ${a.x} ${i.y+s} L ${a.x} ${a.y}`),i.x>a.x&&(f="A 20 20, 0, 0, 0,",m="A 20 20, 0, 0, 1,",u=20,s=20,o.type===P.MERGE&&c.id!==o.parents[0]?v=`M ${i.x} ${i.y} L ${i.x} ${a.y-u} ${m} ${i.x-s} ${a.y} L ${a.x} ${a.y}`:v=`M ${i.x} ${i.y} L ${a.x+u} ${i.y} ${f} ${a.x} ${i.y+s} L ${a.x} ${a.y}`),i.x===a.x&&(v=`M ${i.x} ${i.y} L ${a.x} ${a.y}`)):E==="BT"?(i.x<a.x&&(o.type===P.MERGE&&c.id!==o.parents[0]?v=`M ${i.x} ${i.y} L ${i.x} ${a.y+u} ${m} ${i.x+s} ${a.y} L ${a.x} ${a.y}`:v=`M ${i.x} ${i.y} L ${a.x-u} ${i.y} ${f} ${a.x} ${i.y-s} L ${a.x} ${a.y}`),i.x>a.x&&(f="A 20 20, 0, 0, 0,",m="A 20 20, 0, 0, 1,",u=20,s=20,o.type===P.MERGE&&c.id!==o.parents[0]?v=`M ${i.x} ${i.y} L ${i.x} ${a.y+u} ${f} ${i.x-s} ${a.y} L ${a.x} ${a.y}`:v=`M ${i.x} ${i.y} L ${a.x-u} ${i.y} ${f} ${a.x} ${i.y-s} L ${a.x} ${a.y}`),i.x===a.x&&(v=`M ${i.x} ${i.y} L ${a.x} ${a.y}`)):(i.y<a.y&&(o.type===P.MERGE&&c.id!==o.parents[0]?v=`M ${i.x} ${i.y} L ${a.x-u} ${i.y} ${m} ${a.x} ${i.y+s} L ${a.x} ${a.y}`:v=`M ${i.x} ${i.y} L ${i.x} ${a.y-u} ${f} ${i.x+s} ${a.y} L ${a.x} ${a.y}`),i.y>a.y&&(o.type===P.MERGE&&c.id!==o.parents[0]?v=`M ${i.x} ${i.y} L ${a.x-u} ${i.y} ${f} ${a.x} ${i.y-s} L ${a.x} ${a.y}`:v=`M ${i.x} ${i.y} L ${i.x} ${a.y+u} ${m} ${i.x+s} ${a.y} L ${a.x} ${a.y}`),i.y===a.y&&(v=`M ${i.x} ${i.y} L ${a.x} ${a.y}`));r.append("path").attr("d",v).attr("class","arrow arrow"+M%Z)},"drawArrow"),bt=p((r,c)=>{const o=r.append("g").attr("class","commit-arrows");[...c.keys()].forEach(h=>{const i=c.get(h);i.parents&&i.parents.length>0&&i.parents.forEach(a=>{gt(o,c.get(a),i,c)})})},"drawArrows"),dt=p((r,c)=>{const o=K().gitGraph,h=r.append("g");c.forEach((i,a)=>{const b=a%Z,f=I.get(i.name).pos,m=h.append("line");m.attr("x1",0),m.attr("y1",f),m.attr("x2",J),m.attr("y2",f),m.attr("class","branch branch"+b),E==="TB"?(m.attr("y1",me),m.attr("x1",f),m.attr("y2",J),m.attr("x2",f)):E==="BT"&&(m.attr("y1",J),m.attr("x1",f),m.attr("y2",me),m.attr("x2",f)),he.push(f);let u=i.name;const s=Pe(u),M=h.insert("rect"),l=h.insert("g").attr("class","branchLabel").insert("g").attr("class","label branch-label"+b);l.node().appendChild(s);let _=s.getBBox();M.attr("class","branchLabelBkg label"+b).attr("rx",4).attr("ry",4).attr("x",-_.width-4-(o.rotateCommitLabel===!0?30:0)).attr("y",-_.height/2+8).attr("width",_.width+18).attr("height",_.height+4),l.attr("transform","translate("+(-_.width-14-(o.rotateCommitLabel===!0?30:0))+", "+(f-_.height/2-1)+")"),E==="TB"?(M.attr("x",f-_.width/2-10).attr("y",0),l.attr("transform","translate("+(f-_.width/2-5)+", 0)")):E==="BT"?(M.attr("x",f-_.width/2-10).attr("y",J),l.attr("transform","translate("+(f-_.width/2-5)+", "+J+")")):M.attr("transform","translate(-19, "+(f-_.height/2)+")")})},"drawBranches"),xt=p(function(r,c,o,h){ut();const i=K(),a=i.gitGraph;z.debug("in gitgraph renderer",r+`
`,"id:",c,o),ie=h.db.getCommits();const b=h.db.getBranchesAsObjArray();E=h.db.getDirection();const f=Fe(`[id="${c}"]`);let m=0;b.forEach((u,s)=>{const M=Pe(u.name),v=f.append("g"),l=v.insert("g").attr("class","branchLabel"),_=l.insert("g").attr("class","label branch-label");_.node().appendChild(M);let k=M.getBBox();I.set(u.name,{pos:m,index:s}),m+=50+(a.rotateCommitLabel?40:0)+(E==="TB"||E==="BT"?k.width/2:0),_.remove(),l.remove(),v.remove()}),Ee(f,ie,!1),a.showBranches&&dt(f,b),bt(f,ie),Ee(f,ie,!0),Ke.insertTitle(f,"gitTitleText",a.titleTopMargin,h.db.getDiagramTitle()),Ue(void 0,f,a.diagramPadding,a.useMaxWidth??i.useMaxWidth)},"draw"),yt={draw:xt},kt=p(r=>`
  .commit-id,
  .commit-msg,
  .branch-label {
    fill: lightgrey;
    color: lightgrey;
    font-family: 'trebuchet ms', verdana, arial, sans-serif;
    font-family: var(--mermaid-font-family);
  }
  ${[0,1,2,3,4,5,6,7].map(c=>`
        .branch-label${c} { fill: ${r["gitBranchLabel"+c]}; }
        .commit${c} { stroke: ${r["git"+c]}; fill: ${r["git"+c]}; }
        .commit-highlight${c} { stroke: ${r["gitInv"+c]}; fill: ${r["gitInv"+c]}; }
        .label${c}  { fill: ${r["git"+c]}; }
        .arrow${c} { stroke: ${r["git"+c]}; }
        `).join(`
`)}

  .branch {
    stroke-width: 1;
    stroke: ${r.lineColor};
    stroke-dasharray: 2;
  }
  .commit-label { font-size: ${r.commitLabelFontSize}; fill: ${r.commitLabelColor};}
  .commit-label-bkg { font-size: ${r.commitLabelFontSize}; fill: ${r.commitLabelBackground}; opacity: 0.5; }
  .tag-label { font-size: ${r.tagLabelFontSize}; fill: ${r.tagLabelColor};}
  .tag-label-bkg { fill: ${r.tagLabelBackground}; stroke: ${r.tagLabelBorder}; }
  .tag-hole { fill: ${r.textColor}; }

  .commit-merge {
    stroke: ${r.primaryColor};
    fill: ${r.primaryColor};
  }
  .commit-reverse {
    stroke: ${r.primaryColor};
    fill: ${r.primaryColor};
    stroke-width: 3;
  }
  .commit-highlight-outer {
  }
  .commit-highlight-inner {
    stroke: ${r.primaryColor};
    fill: ${r.primaryColor};
  }

  .arrow { stroke-width: 8; stroke-linecap: round; fill: none}
  .gitTitleText {
    text-anchor: middle;
    font-size: 18px;
    fill: ${r.textColor};
  }
`,"getStyles"),_t=kt,wt={parser:We,db:mt,renderer:yt,styles:_t};export{wt as diagram};
