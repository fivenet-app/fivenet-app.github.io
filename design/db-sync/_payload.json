[{"data":1,"prerenderedAt":240},["ShallowReactive",2],{"navigation":3,"/design/db-sync":125,"/design/db-sync-surround":237},[4,50,90,104,122],{"title":5,"_path":6,"children":7},"Getting Started","/getting-started",[8,9,12,15,28,31],{"title":5,"_path":6},{"title":10,"_path":11},"Requirements","/getting-started/requirements",{"title":13,"_path":14},"Components","/getting-started/components",{"title":16,"_path":17,"children":18},"Configuration","/getting-started/configuration",[19,22,25],{"title":20,"_path":21},"Config File Reference","/getting-started/configuration/config-reference",{"title":23,"_path":24},"Config Examples","/getting-started/configuration/examples",{"title":26,"_path":27},"Command Flags","/getting-started/configuration/flags",{"title":29,"_path":30},"Demo","/getting-started/demo",{"title":32,"_path":33,"children":34},"Installation","/getting-started/installation",[35,38,41,44,47],{"title":36,"_path":37},"Methods","/getting-started/installation/methods",{"title":39,"_path":40},"Hosted","/getting-started/installation/hosted",{"title":42,"_path":43},"Using Docker","/getting-started/installation/container-docker",{"title":45,"_path":46},"Kubernetes: Using Helm","/getting-started/installation/kubernetes-helm",{"title":48,"_path":49},"After Install Steps","/getting-started/installation/post-install-steps",{"title":51,"_path":52,"children":53},"User Guides","/user-guides",[54,57,60,68,71,74,77,80,83,86,89],{"title":55,"_path":56},"Citizens","/user-guides/citizens",{"title":58,"_path":59},"Vehicles","/user-guides/vehicles",{"title":61,"_path":62,"children":63},"Documents","/user-guides/documents",[64,65],{"title":61,"_path":62},{"title":66,"_path":67},"Templates","/user-guides/documents/templates",{"title":69,"_path":70},"Jobs","/user-guides/jobs",{"title":72,"_path":73},"Calendar","/user-guides/calendar",{"title":75,"_path":76},"Livemap","/user-guides/livemap",{"title":78,"_path":79},"Dispatch Center","/user-guides/centrum",{"title":81,"_path":82},"Messenger","/user-guides/messenger",{"title":84,"_path":85},"Settings","/user-guides/settings",{"title":87,"_path":88},"Languages (i18n)","/user-guides/i18n",{"title":51,"_path":52},{"title":91,"_path":92,"children":93},"Development","/development",[94,95,98,101],{"title":91,"_path":92},{"title":96,"_path":97},"Protocol Documentation","/development/grpc-api",{"title":99,"_path":100},"Release Process","/development/release",{"title":102,"_path":103},"User Activity","/development/user-activity",{"title":105,"_path":106,"children":107},"Design Docs","/design",[108,111,113,116,119],{"title":109,"_path":110},"DB Sync","/design/db-sync",{"title":78,"_path":112},"/design/dispatch-center",{"title":114,"_path":115},"Employee Management","/design/employee-management",{"title":117,"_path":118},"Player Tracker Rework","/design/player-tracker-rework",{"title":120,"_path":121},"Qualifications","/design/qualifications",{"title":123,"_path":124},"","/",{"_path":110,"_dir":126,"_draft":127,"_partial":127,"_locale":123,"title":109,"description":123,"body":128,"_type":231,"_id":232,"_source":233,"_file":234,"_stem":235,"_extension":236},"design",false,{"type":129,"children":130,"toc":225},"root",[131,139,146,156,162,211,217],{"type":132,"tag":133,"props":134,"children":136},"element","h1",{"id":135},"db-sync",[137],{"type":138,"value":109},"text",{"type":132,"tag":140,"props":141,"children":143},"h2",{"id":142},"goal",[144],{"type":138,"value":145},"Goal",{"type":132,"tag":147,"props":148,"children":149},"ul",{},[150],{"type":132,"tag":151,"props":152,"children":153},"li",{},[154],{"type":138,"value":155},"Multi-Framework compatibility - \"Abstracting\" the framework's tables away via a separate sync process with handles/merges the data as needed into FiveNet compatible table structure.",{"type":132,"tag":140,"props":157,"children":159},{"id":158},"idea",[160],{"type":138,"value":161},"Idea",{"type":132,"tag":163,"props":164,"children":165},"ol",{},[166,179,184,189],{"type":132,"tag":151,"props":167,"children":168},{},[169,171],{"type":138,"value":170},"Sync process that takes care of reading and transforming the data.\n",{"type":132,"tag":163,"props":172,"children":173},{},[174],{"type":132,"tag":151,"props":175,"children":176},{},[177],{"type":138,"value":178},"Cleanup of deleted, e.g., users, vehicles, etc., should be handled as well.",{"type":132,"tag":151,"props":180,"children":181},{},[182],{"type":138,"value":183},"Config presets for common frameworks (e.g., ESX, QB)",{"type":132,"tag":151,"props":185,"children":186},{},[187],{"type":138,"value":188},"For communicating changes from FiveNet to the gameserver, the NATS websocket system or a custom websocket system could be used (messages would be encoded via Protobuf JSON).",{"type":132,"tag":151,"props":190,"children":191},{},[192,194,201,203],{"type":138,"value":193},"A \"state\" file (like log collectors use to store the \"last line\") to store the last \"ID\" (in case of tables without an ID field, it would use, e.g., the ",{"type":132,"tag":195,"props":196,"children":198},"code",{"className":197},[],[199],{"type":138,"value":200},"owner",{"type":138,"value":202}," field).\n",{"type":132,"tag":163,"props":204,"children":205},{},[206],{"type":132,"tag":151,"props":207,"children":208},{},[209],{"type":138,"value":210},"In case of multiple queries, the state is stored per query index number in the config file.",{"type":132,"tag":140,"props":212,"children":214},{"id":213},"limitations",[215],{"type":138,"value":216},"Limitations",{"type":132,"tag":147,"props":218,"children":219},{},[220],{"type":132,"tag":151,"props":221,"children":222},{},[223],{"type":138,"value":224},"Only one (main) phone number per char/user.",{"title":123,"searchDepth":226,"depth":226,"links":227},2,[228,229,230],{"id":142,"depth":226,"text":145},{"id":158,"depth":226,"text":161},{"id":213,"depth":226,"text":216},"markdown","content:9.design:db-sync.md","content","9.design/db-sync.md","9.design/db-sync","md",[238,239],{"_path":103,"title":102,"description":123},{"_path":112,"title":78,"description":123},1736137405241]